<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Technology | OJ's rants]]></title>
  <link href="http://buffered.io/categories/technology/atom.xml" rel="self"/>
  <link href="http://buffered.io/"/>
  <updated>2012-08-23T20:25:25+10:00</updated>
  <id>http://buffered.io/</id>
  <author>
    <name><![CDATA[OJ Reeves]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Dave Thomas at YOW! Nights Brisbane]]></title>
    <link href="http://buffered.io/posts/dave-thomas-at-yow-nights-brisbane/"/>
    <updated>2010-05-22T23:30:00+10:00</updated>
    <id>http://buffered.io/posts/dave-thomas-at-yow-nights-brisbane</id>
    <content type="html"><![CDATA[<p><img src="http://buffered.io/uploads/2010/05/haskell-logo-variation.png" alt="Haskell Logo" title="Haskell Logo" width="128" height="128" style="float:right;margin-left:5px;margin-bottom:5px" />Two nights ago I was fortunate enough to attend a <a href="http://yownightbrisbanemay.eventbrite.com/" title="YOW! Nights Brisbane - May 20th">YOW! Nights</a> conference held at the local Microsoft Office here in Brisbane. The speaker for the session was none other than <a href="http://www.davethomas.net/" title="Dave Thomas">Dave Thomas</a>, the man behind the likes of <a href="http://objectmentor.com/" title="Object Mentor">ObjectMentor</a>. Not only is this guy incredibly switched on, he is thought-provoking and very entertaining to boot. I've been to a few of these sessions in the past but I've never seen one as packed out as this one. It was great to see such a turn-out, which no doubt was boosted by the presence of both the <a href="http://www.qmsdnug.org/" title="QMSDNUG">Queensland MSDN Users Group</a> and the <a href="http://bfpg.org/" title="BFPG">Brisbane Functional Programming Group</a>.</p>

<!--more-->


<p>The talk was covering <a href="http://en.wikipedia.org/wiki/Functional_programming" title="Functional Programming">Functional Programming</a> and the <a href="http://en.wikipedia.org/wiki/NoSQL" title="NoSQL">NoSQL</a> movement (which, as Dave himself puts it, should be called <em>NoRDB</em>). These are two areas of computing that are currently key interests of mine, so it won't come as a surprise to find that I thoroughly enjoyed the talk. I certainly wasn't the only one. Dave did such a great job of covering the positives of these two movements that we're already seeing more and more people signing up for membership to <a href="http://bfpg.org/" title="BFPG">BFPG</a>.</p>

<p>I'm not going to go into the gory details about what Dave covered in his talk as I don't want to spoil it for other people if he plans on doing it again elsewhere. There are a few things I would like to mention though:</p>

<ul>
  <li>Functional Programming is here to stay. If you're not familiar with it, or haven't yet taken a look at it, I suggest you get started!</li>
  <li>If you're looking to get involved with FP and you're in or around the Brisbane area, be sure to come to one of our <a href="http://bfpg.org/" title="BFPG">BFPG</a> meetups.</li>
  <li>Don't fall into the trap of assuming that if your system needs a back-end data store that an <a href="http://en.wikipedia.org/wiki/Relational_database_management_system" title="Relational Database Management System">RDBMS</a> is the only option, because it's not!</li>
</ul>


<p>This talk has inspired me to not only continue checking out the likes of <a href="http://haskell.org/" title="Haskell">Haskell</a>, <a href="http://erlang.org/" title="Erlang">Erlang</a> and <a href="http://riak.basho.com/" title="Riak">Riak</a>, it's pointed me at some languages that I never knew existed. Languages which are insanely powerful, very dense, yet still extremely useful. Some examples are <a href="http://en.wikipedia.org/wiki/J_(programming_language)" title="J">J</a>, <a href="http://en.wikipedia.org/wiki/K_(programming_language)" title="K">K</a> and <a href="http://en.wikipedia.org/wiki/Q_(programming_language_from_Kx_Systems)" title="Q">Q</a>. <a href="http://www.kx.com/products/database.php" title="KDB+">KDB+</a> in particular is very interesting as it ties in with the use of another type of technology that I was aware of but knew nothing about: <a href="http://en.wikipedia.org/wiki/Column-oriented_DBMS" title="Column Database">Column Databases</a>. Crazy stuff.</p>

<p>After seeing so many people excited by the prospect of Functional Programming after Dave's talk had concluded, I decided to set up a new website for <a href="http://bfpg.org/" title="BFPG">BFPG</a> so that we had a proper home rather than just a spot on <a href="http://www.meetup.com/Brisbane-Functional-Programming-Group-BFG/" title="BFPG @ Meetup.com">Meetup.com</a>. Check it out and feel free to send through some feedback if you have any, or <a href="http://bfpg.org/contact/" title="Contact BFPG">drop us a line</a> if you have any ideas for talks or would like to present something yourself.</p>

<p>That's it for today's brain-fart :)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[The Wrong Decision by the Wrong Person]]></title>
    <link href="http://buffered.io/posts/the-wrong-decision-by-the-wrong-person/"/>
    <updated>2010-01-28T22:35:00+10:00</updated>
    <id>http://buffered.io/posts/the-wrong-decision-by-the-wrong-person</id>
    <content type="html"><![CDATA[<p><a href="http://buffered.io/uploads/2010/01/pizza.jpg" title="The wrong tool." rel="lightbox"><img src="http://buffered.io/uploads/2010/01/pizza.jpg" alt="The wrong tool." title="The wrong tool." style="float:right; margin-left:5px; margin-bottom:5px;"  width="150"/></a>There is one thing about my industry that I still find truly amazing (and not in a good way). This is despite the fact that it has happened to me so many times that you think I'd be used to it! I'm talking about non-technical people making technical decisions.</p>

<p>For some reason, it's a very common practice for those people who don't have expertise in a certain field to make decisions for people working in that field. The best example I can think of off the top of my head is the answer to the question: <em>"Which technology should we use?"</em></p>

<p>Let me take a step back in time for a moment.</p>

<!--more-->


<p>I applied for a job with a certain company (which shall remain nameless) that was looking for a number of C#/.NET developers of a certain level of experience. After confirming an interview date and time, I turned up to find myself facing a panel of 3 interviewers. One of those people held a technical position, though I found out later that the position he held was self-appointed and certainly not an indication of the person's level of technical knowledge or expertise. The other two were in non-technical positions.</p>

<p>During the interview we had the usual discussions and questions around technial knowledge, depth of understanding of certain areas of the .NET framework, views and approaches to dealing with people in teams, agile experience, etc. It all went very well. At the end of the interview I was given my chance to ask a few questions. The main one I wanted to ask was <em>"Why did you decide to use .NET for this project?"</em></p>

<p>For the record, the <em>previous</em> version of the system was written using an older Microsoft technology stack. The decision had been made to go with .NET for this new version. Can you see the correlation?</p>

<p>The answer was quite stunning. The only reason the project was using .NET was because the previous version was a Microsoft-based solution.</p>

<p>The first thing I thought was "surely that can't be it?". As a matter of fact, that wasn't the <em>only</em> reason for it, but it was the <em>main</em> reason. The decision wasn't made by a technical person, it was made by someone in upper management.</p>

<p>Scary huh!?</p>

<p>In my personal opinion, there is one particular technology that I think would have done a much better job of solving this particular problem, and it's not a Microsoft solution. It's not a Sun solution, or any other mainstream option for that matter. In my view, <strong>Erlang</strong> would have been perfect.</p>

<p>I don't think that a company like that would have ever even considered Erlang as a viable option. Mainly for two reasons. The first is that the amount of skilled Erlang developers available on the East Coast of Australia is extremely small. The second is fear of the unknown/non-mainstream tech. That is, companies like to go with what other companies are going with.</p>

<p>The crazy thing about this scenario is that management go to market to hire people who are domain experts, and then proceed to tell them which technologies to use. Surely you would be better off hiring people to know how to solve problem X really well, and then listen to what they have to say about the technology stack that should be put in place? No, not in this industry. Probably not in my lifetime either!</p>

<p>So if you're a non-tech person leading a team of techies, please PLEASE listen to what they have to say. Ask them what they think is the right approach and the right toolset. Don't take control of the technical decisions. Let them do what you hired them to do: Solve the problem, and use the right tool for the job. If they don't know the answer, or the answer is always the same, then you've got the wrong developers.</p>

<p>Thanks for listening :)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA['It's OK to Fail]]></title>
    <link href="http://buffered.io/posts/its-ok-to-fail/"/>
    <updated>2009-12-11T15:42:00+10:00</updated>
    <id>http://buffered.io/posts/its-ok-to-fail</id>
    <content type="html"><![CDATA[<p><a href="http://buffered.io/uploads/2009/12/EpicFail02.jpg" rel="lightbox[fail]" title="Epic Fail"><img src="http://buffered.io/uploads/2009/12/EpicFail02.jpg" alt="Epic Fail" width="160" style="float:left;padding-bottom:5px;padding-right:5px;" /></a><em>Yes. You read that right. It's OK to fail. Yes, I am talking to you. You... that guy who is part of every team. The one who seems to feel the need to be right about everything. The one who thinks that everything new has already been done 15 years prior. The one who believes that every project they have participated in has been a profound success, and that a project-level failure (which includes missing deadlines or blowing the budget) is something they have never experienced. Failure is not only OK, it's something that you <strong>must</strong> experience somewhere along the way so you know when you've succeeded.</em></p>

<!--more-->


<p><em>It's safe to admit that you just don't know! In fact, it's <strong>better</strong> if you do admit it. Pretending that you know what you don't not only makes you the butt of the jokes, but you end up being detrimental to the success of the project.</em></p>

<p><em>Stop trying to be a know-all. Let go of the idea that you need to be the one to approve everything. Take a step back and be honest to yourself and the rest of the team. You aren't a one-man-band. You aren't the technical guru that you think you are. You aren't even a specialist in a particular area, let alone a jack-of-all-trades.</em></p>

<p><em>When you attempt to do something and you fail, stop trying to make it sound like you haven't failed. Please stop yourself from trying to turn your wrong into a right. <strong>Everyone</strong> fails in one way or another during their working life, and as much as you don't want to admit it, it does include you.</em></p>

<p><em>Change your attitude. You'll be doing yourself a favour.</em></p>

<p><em>And while you're at it, how about you get up to speed with the technology you're working with. Then you won't have to pretend, and the likelihood of you failing will start to decrease.</em></p>

<p><em>Thanks for listening.</em></p>

<hr />


<p>This might seem like an angry rant. I admit it is a little. It's not directed at one particular person. It's aimed at a particuar type, or breed, of person. One that seems to appear in every gig that I work on. This kind of individual can be a bad apple in a barrel of good apples who over time causes long-term rot and frustration amongst the team. Velocity can be seriously affected. Productivity can plummet.</p>

<p>Remember, it's not about you, it's all about the <strong>software</strong>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[The Future is Erlang]]></title>
    <link href="http://buffered.io/posts/the-future-is-erlang/"/>
    <updated>2009-10-31T20:28:00+10:00</updated>
    <id>http://buffered.io/posts/the-future-is-erlang</id>
    <content type="html"><![CDATA[<p><img src="http://buffered.io/uploads/2009/10/erlang.png" alt="erlang" title="erlang" style="float:left;margin-right:5px;margin-bottom:5px;" />For quite a while I've been using my spare cycles to chew over a problem. This problem is not one that hasn't been solved before, but one that I feel can be solved in a much better way. From the bit of research that I've done, I can see at least three areas which can be improved on dramatically. So I've decided, after a long period of deliberation, to go ahead and build my solution and release it to the world as a service!</p>

<p>I know, this kind of thing happens thousands of times a day. Some arbitrary geek decided to build the next killer app and expects to make a crapload of cash out of it. While that would be nice, the ultimate goal isn't the cash. The goal for me is to build something that gets used, and for me to begin to master an area of technology that I've had a quiet passion for for a long period of time now.</p>

<p>My plan is simple. While learning the technologies that I will be using I'll be building another application and blogging about it so that all of you can learn with me. Meanwhile, I shall use my learnings to build this other application at the same time.</p>

<p>The final result should be a series of posts which help other people learn the technology stack, give better coverage and visibility to languages and technologies that a lot of the geek world doesn't know about (and really should!), and for me to carve myself a bit of a niche here on the East coast of Ozland. I am hoping to be able to consult my services out to other businesses as a result.</p>

<p>For those that are interested in following along, here is the full tech stack and toolset that I'll be using:</p>

<ul>
<li><a href="http://erlang.org/" title="Erlang">Erlang</a> - A fantastic cross-platform functional programming language that has some amazing features.</li>
<li><a href="http://bitbucket.org/justin/webmachine/" title="Webmachine HTTP toolkit">Webmachine</a> - A HTTP toolkit which sits on top of <a href="http://code.google.com/p/mochiweb/" title="Mochiweb">Mochiweb</a> that makes it easy to build well-behaved HTTP applications.</li>
<li><a href="http://nitrogenproject.com/" title="Nitrogen Framework">Nitrogen</a> - An Erlang-based framework that makes it easy to build websites.</li>
<li><a href="http://riak.basho.com/" title="Riak">Riak</a> or <a href="http://couchdb.apache.org/" title="CouchDB">CouchDB</a> - Both of these amazing pieces of tech are potential candidates for the back-end storage. I'm not yet sure which one I'll go with.</li>
<li><a href="http://jquery.com/" title="jQuery">jQuery</a> - A great JavaScript library for the front-end.</li>
<li><a href="http://vim.org/" title="VIM text editor">VIM</a> - My favourite text editor :)</li>
<li><a href="http://www.xubuntu.org/" title="Xubuntu">Xubuntu</a> - Ubuntu <a href="http://ubuntu.com/" title="Ubuntu 9.10">Karmic Koala</a> with <a href="http://www.xfce.org/" title="XFCE">XFCE</a> as the window manager.</li>
<li><a href="http://mercurial-scm.org/" title="Mercurial SCM">Mercurial</a> - My favourite version control system.</li>
<li><a href="http://trac.edgewall.org/" title="The Trac Project">Trac</a> - A project tracking tool.</li>
<li><a href="http://www.virtualbox.org/" title="VirtualBox">VirtualBox</a> - My choice for virtualisation. I tend to run Windows 7 as my primary OS, so most of my dev will be in a VM. When I get my desktop machine back up and running (with all three monitors!) it'll most likely multiboot Win 7 and Xubuntu.
<li><a href="http://wave.google.com/" title="Google Wave">Google Wave</a> - I'll be using this for communications with some really switched on people in the Erlang community who have kindly offered to help me with questions and whatnot specific to some of the areas of tech I've mentioned above.</li>
</ul>


<p>During the course of my blogging/learning I'll be focussing on Webmachine, Riak/CouchDB, Erlang and Nitrogen. All the other tools will probably get mentioned along the way, but the primary goal is to focus on these things.</p>

<p>I'm really excited! I'm currently in the process of documenting my goals and the design for the main application. Once that's done, I'll get started with the fun stuff. I've got a lot to do and it should be a fun ride. I hope you enjoy following along!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Now Running Nginx]]></title>
    <link href="http://buffered.io/posts/now-running-nginx/"/>
    <updated>2009-09-10T17:52:00+10:00</updated>
    <id>http://buffered.io/posts/now-running-nginx</id>
    <content type="html"><![CDATA[<p><a href="http://buffered.io/uploads/2009/09/slow_snail.jpg" rel="lightbox"><img src="http://buffered.io/uploads/2009/09/slow_snail.jpg" alt="clarkson_face" title="clarkson_face" width="150" style="float: right; margin-bottom: 5px; margin-left: 5px;" /></a>For the last couple of years, the server which has powered this site (and a few other sites) has been running the free version of <a href="http://litespeedtech.com/" title="Litespeed">Litespeed</a> web server. After feeling the resource burden of <a href="http://httpd.apache.org/" title="Apache Httpd">Apache</a>, Litespeed was a breath of fresh air! The fact that the "full" version wasn't free didn't bother me, I was happy to stick with the standard edition as it seemed more than capable of handling the meagre traffic that this site generates.</p>

<!--more-->


<p>After a year or so of serving up content, it managed to handle a <a href="http://www.reddit.com/r/programming/comments/6ngfy/an_interesting_little_problem/" title="An Interesting Little Problem">couple</a> <a href="http://www.reddit.com/r/programming/comments/6tsbf/a_better_nub/" title="A better nub">of</a> <a href="http://www.reddit.com/r/haskell/comments/8whp6/pointfree_style_what_is_it_good_for/" title="Point-free style - What is it good for?">Reddit</a> <a href="http://www.reddit.com/r/haskell/comments/8v95i/data_crunching_in_haskell/" title="Data crunching in Haskell">submissions</a> without much of a bother! I was suitably impressed.</p>

<p>But there comes a time when you can't help but wonder what else is out there. For me, that time came a little while ago when I boosted the number of plug-ins that I use on this site. Litespeed took longer to serve pages up and I couldn't help but notice it. I'm certainly not blaming Litespeed, because the obvious solution is to remove the plug-ins! But I didn't want to do that as those plug-ins provide features for this site that I don't want to lose. So my quest to find another web server began.</p>

<p>Then recently I started researching ideas for developing software in Erlang. I've been reading up on the language for quite a while and I'm getting to the point where I intend to build something. My first effort is going to be a web application that uses <a href="http://code.google.com/p/mochiweb/" title="Mochiweb">Mochiweb</a>, <a href="http://bitbucket.org/justin/webmachine/wiki/Home" title="Webmachine">Webmachine</a> and <a href="http://couchdb.apache.org/" title="CouchDB">CouchDB</a>. I know that at some point I'm going to want to have this thing run on the web so that other people can play with it and that would mean that I would have to have a web server available that could also route requests to my Erlang server. Of course, I want it to be <em>quick</em>.</p>

<p><a href="http://buffered.io/uploads/2009/09/clarkson_face.jpg" rel="lightbox"><img src="http://buffered.io/uploads/2009/09/clarkson_face.jpg" alt="clarkson_face" title="clarkson_face" width="150" style="float: left; margin-bottom: 5px; margin-right: 5px;" /></a>So after a bit of deliberation and research, I followed the footsteps of some big players and ended up installing <a href="http://nginx.net/" title="Nginx">Nginx</a> (which I believe is pronounced <em>"Engine-X"</em>). I kid you not, this thing is amazing! I'm not going to give a full review of it here because I haven't used it enough to know how good it is. But the speed-up for this site in particular is obvious (at least for me).</p>

<p>My mate Dan's <a href="http://shiftperception.com/blog/" title="Shiftperception">site</a> <strong>absolutely flies</strong>!</p>

<p>On the whole, <a href="http://wiki.nginx.org/Main" title="Nginx wiki">Nginx</a> gets a huge thumbs up from me thus far. If you're looking for a speedy web server that can do reverse proxying, dish up static content like a maniac and handle forwarding of requests to a variety of other servers then you should seriously consider taking a look at Nginx.</p>

<p>Thank you, <a href="http://sysoev.ru/en/" title="Igor Sysoev">Igor</a>!</p>
]]></content>
  </entry>
  
</feed>
