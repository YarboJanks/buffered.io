<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Windows | OJ's rants]]></title>
  <link href="http://buffered.io/categories/windows/atom.xml" rel="self"/>
  <link href="http://buffered.io/"/>
  <updated>2012-08-26T16:47:20+10:00</updated>
  <id>http://buffered.io/</id>
  <author>
    <name><![CDATA[OJ Reeves]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Setting up Trac, Mercurial and SSH on Windows]]></title>
    <link href="http://buffered.io/posts/setting-up-trac-mercurial-and-ssh-on-windows/"/>
    <updated>2009-05-16T17:43:00+10:00</updated>
    <id>http://buffered.io/posts/setting-up-trac-mercurial-and-ssh-on-windows</id>
    <content type="html"><![CDATA[<p><strong>WARNING - This blog post is long :)</strong>
<em>This post has been edited since it was published. Please see the end of the article for any notes/modifications</em></p>

<h3>Some Background Info</h3>


<p>I had the need to do this for work recently. It was nothing short of a right royal pain in the butt. It was such a pain, in fact, that I have decided to document what I had to do to get it working so that other poor unfortunates will feel less pain if they have to do this themselves.</p>

<p>Almost regardless of the company and the software I'm working on, I use <a href="http://www.selenic.com/mercurial/" title="Mercurial">Mercurial</a> for source code control. For the work I am doing at the moment, I was also using hg because the company I am involved with is relatively new and they hadn't yet sorted out a plan for version control or <acronym title="Application Lifecycle Management">ALM</acronym>. It was working quite well and I was pushing all my changes to my <a href="http://www.google.com.au/url?q=http://www.buffalotech.com/products/network-storage/terastation/terastation-iii/&ei=fioOSuLvGpu8swPl56zqAg&sa=X&oi=smap&resnum=1&ct=result&cd=2&usg=AFQjCNHXKMchy5tR-a-jMOFAbtxoWzfedA" title="Terastation">NAS box</a> to make sure I had other copies backed up, etc. I was <em>living the dream</em> :)</p>

<!--more-->


<p>The problem, though, was that this setup was working fine for me as a sole developer, but wasn't solving the problem for the other developers. There are two other people involved in development, and until now most of the work they have been doing has been in a different area to the bits I have been doing. Sharing and merging code was done by email patches. Those developers weren't using version control as far as I'm aware.</p>

<p>So given the volume of changes and the number of merges that were happening, it was well past time to get something proper in place that we could all use. The original plan was to go with an installation of <a href="http://en.wikipedia.org/wiki/Team_Foundation_Server" title="Team Foundation Server">TFS</a> to handle all of these issues for us. Personally, I am not a huge fan of TFS. The experience I've had with it so far hasn't been great. It also has a shocking effect on the speed of my IDE (I seem to have no choice but to use integration with the IDE, which again isn't great).</p>

<p>To cut this part of the story short, we had issues getting TFS to work. We tried installing a few times, tweaking here and there, but we never managed to get it to work. I know I could have called a TFS guru, such as <a href="http://stevennagy.spaces.live.com/" title="Steven Nagy">Snagy</a> to pick his brains and perhaps ask him nicely to help out, but he's a busy man and there's no guarantee that we wouldn't have to start again from scratch. I wasn't really up for that, and neither was my boss.</p>

<p>So I told him that I thought it might just be easier to get a server running with Mercurial for the version control, and <a href="http://trac.edgewall.org/" title="The Trac Project">Trac</a> for issue tracking and project "stuff". Not only would it mean that I could just push my local repository to the server and have the entire history transferred (TFS would have been latest version only) but it would save us a substantial cost in license fees, remove the need for VS integration, and everyone could be up and running with a <acronym title="Distributed Version Control System">DVCS</acronym> in no time.</p>

<p>My boss, being the legend he is, gave me the thumbs up! Awesome.</p>

<p>So the rest of this post is dedicated to what was involved in getting things set up. If you're not interested, then go read <a href="http://buffered.io/?random" title="Random post">something else</a> :)</p>

<h3>The need for a bit of security</h3>


<p>Needless to say, the <acronym title="Intellectual Property">IP</acronym> that we're building is something that my employer is rather protective of! And rightly so. Hence it won't come as a surprise to hear that security of this information is very important. I decided that having Mercurial run over plan old HTTP would be a bad idea. I was keen to have it tunnel via SSH, and have all clients authenticate using their own private keys. Hence, getting an SSH server was going to be part of the setup.</p>

<h3>Web server</h3>


<p>IIS is already installed on the server, and running another web server seemed like overkill. I didn't want to expose <a href="http://trac.edgewall.org/wiki/TracStandalone" title="Trac Standalone">tracd</a> directly over the web as it doesn't support SSL, so I wanted to get it running under IIS instead. This added another little bit of complexity to the install.</p>

<h3>What to download</h3>


<p>There were quite a few bits that I needed to download to get this working, they're listed below. At first it might not be obvious as to why these things are needed, just trust me :)</p>

<p>First, server-side components:</p>

<ol>
<li>Python 2.5.4 - Get this version, not anything earlier or later if you want this guide to work! (<a href="http://www.python.org/ftp/python/2.5.4/python-2.5.4.msi" title="Download Python">download</a>)</li>
<li>Setuptools (<a href="http://pypi.python.org/packages/2.5/s/setuptools/setuptools-0.6c9.win32-py2.5.exe#md5=602d06054ec1165e995ae54ac30884d7" title="Download setuptools">download</a>)</li>
<li>ClearSilver (<a href="http://www.clearsilver.net/downloads/win32/clearsilver-0.10.4-py2.5-win32.egg" title="Download ClearSilver">download</a>)</li>
<li>PySqlite (<a href="http://initd.org/pub/software/pysqlite/releases/2.4/2.4.1/pysqlite-2.4.1.win32-py2.5.exe" title="Download PySqlite">download</a>)</li>
<li>flup (<a href="http://www.saddi.com/software/flup/dist/flup-0.5-py2.5.egg" title="Download flup">download</a>)</li>
<li>Trac installer v0.11.4 (<a href="http://ftp.edgewall.com/pub/trac/Trac-0.11.4.win32.exe" title="Download Trac">download</a>)</li>
<li>Mercurial (<a href="http://mercurial.berkwood.com/binaries/Mercurial-1.2.1.exe" title="Download Mercurial">download</a>)</li>
<li>Subversion (<a href="http://www.collab.net/servlets/OCNDirector?id=CSVN1.6.2WINC" title="Download Subversion">download</a>)</li>
<li>Apache Tomcat AJP Isapi filter (<a href="http://www.apache.org/dist/tomcat/tomcat-connectors/jk/binaries/win32/jk-1.2.28/isapi_redirect-1.2.28.dll" title="Download isapi filter">download</a>)</li>
<li>Junction (<a href="http://technet.microsoft.com/en-us/sysinternals/bb896768.aspx" title="Download Junction">download</a>)</li>
<li>CopSSH (<a href="http://sourceforge.net/project/downloading.php?group_id=69227&filename=Copssh_2.1.0_Installer.zip&a=22655277" title="Download CopSSH">download</a>)</li>
<li>Windows Server 2003 Resource Kit (<a href="http://www.microsoft.com/downloads/details.aspx?FamilyID=9D467A69-57FF-4AE7-96EE-B18C4790CFFD&displaylang=en" title="Download resource kit">download</a>)</li>
</ol>


<p>Next, client-side:</p>

<ol>
<li>Mercurial (<a href="http://mercurial.berkwood.com/binaries/Mercurial-1.2.1.exe" title="Download Mercurial">download</a>)</li>
<li>PuTTy (<a href="http://the.earth.li/~sgtatham/putty/latest/x86/putty-0.60-installer.exe" title="Download PuTTy">download</a>)</li>
</ol>


<p>Quite a lot isn't it :)</p>

<h3>Server: Setting up the Python Environment</h3>


<ol>
  <li>Execute the Python installer. This by default installs Python to C:\python25.</li>
  <li>Modify the environment variables so that the Python install folder is included in the PATH.</li>
  <li>Execute the Setuptools installer.</li>
  <li>Execute the PySqlite installer.</li>
  <li>Install the downloaded python eggs:</li>
  <ol>
    <li>Open a command prompt</li>
    <li>Navigate to the folder where your .egg files are downloaded to.</li>
    <li>in the command line, type: <strong>easy_install [filename.egg]</strong>.</li>
    <li>Do this for ClearSilver and flup.</li>
  </ol>
</ol>


<p>At this point, you should have a working installation of Python 2.5.4 with the required eggs and plug-ins.</p>

<h3>Server: Setting up Mercurial</h3>


<ol>
  <li>Execute the Mercurial installer. By default this installs to %programfiles%\Mercurial. Feel free to change this if you like.</li>
  <li>During the installation, the installer will ask if you want to include the install folder in the system PATH. Make sure you click "yes", otherwise you'll have to do it manually afterwards.</li>
</ol>


<p>The Mercurial client is now installed. Later on when installing Trac and getting it to work with Mercurial, I had issues because the Mercurial doesn't install the Mercurial bindings for Python. No only that, trying to use <em>easy_install</em> to install it didn't work because I didn't have Visual Studio 2003 installed on the server (nor did I want to install it!). It turns out that you can get round the issue by doing this:</p>

<ol>
  <li>Go to the Mercurial installation folder using Windows Explorer.</li>
  <li>Locate the file <strong>Library.zip</strong>.</li>
  <li>Open this file with an application like <a href="http://rarsoft.com/" title="WinRAR">WinRAR</a> or <a href="http://www.7-zip.org/" title="7-zip">7-zip</a> (using the built-in Windows zip functionality doesn't work!).</li>
  <li>Inside that archive there is a folder called <em>mercurial</em>. Extract this folder to a disk.</li>
  <li>Open another Windows Explorer and navigate to your Python installation directory (eg. C:\Python25). Open up the <em>Lib</em> sub0folder (that's <em>lib</em>, not <em>lib<strong>s</strong></em>).</li>
  <li>Copy or move the extracted <em>mercurial</em> folder to the <em>lib</em> folder.</li>
</ol>


<p>Done! You've just "installed" the Mercurial bindings for Python. Later down the track, Trac will not crap out when you try and use it!</p>

<h3>Server: Setting up TracMercurial</h3>


<p>Given that we're using Mercurial for the back-end version control, we're going to need to set up and install the Mercurial plugin for Trac. This is where the need for <acronym title="Subversion">SVN</acronym> comes in. Yes, it's ironic that you need SVN to get something working with Mercurial! Just do it, ok!?</p>

<ol>
  <li>Execute the Subversion installer and let it go through with the default installation.</li>
  <li>Make sure that the path to the SVN binaries is included in the system PATH environment variable.</li>
  <li>Open up a command prompt and change directory to a temporary location.</li>
  <li>run the command: <strong>svn co http://svn.edgewall.com/repos/trac/sandbox/mercurial-plugin-0.11</strong> - this gets the right version of the plug-in from source.</li>
  <li>run the command: <strong>cd mercurial-plugin-0.11</strong></li>
  <li>run the command: <strong>python setup.py bdist_egg</strong> - this creates an installable python egg.</li>
  <li>run the command: <strong>python setup.py install</strong> - this installs the plug-in to the global location.</li>
</ol>


<p>The TracMercurial plug-in is now installed. We'll need to configure it slightly when we've installed Trac. That information is listed in the next section.</p>

<p>Next we need to create a repository which will be used to house our source code. We'll pretend we're creating a project called "Slartibartfast".</p>

<ol>
  <li>Create a new folder on the file system somewhere meaningful, such as <strong>C:\Repos</strong>.</li>
  <li>Open a command window, and change directory to that folder.</li>
  <li>create a folder for your project: <strong>mkdir Slartibartfast</strong>.</li>
  <li>Change to that folder: <strong>cd Slartibartfast</strong>.</li>
  <li>Initialise the repository: <strong>hg init .</strong> (note the '.' at the end).</li>
</ol>


<p>Your repository is now ready for code!</p>

<h3>Server: Setting up Trac</h3>


<p>We'll start with the basic install:</p>

<ol>
  <li>Execute the Trac installer.</li>
  <li>Default installation settings are fine.</li>
  <li>It will be installed to the <em>scripts</em> folder under the Python installation folder.</li>
</ol>


<p>At this point it's a good idea to also add the <em>scripts</em> folder to the system PATH. This gives us the ability to run Python scripts from anywhere.</p>

<p>Next up, let's create a Trac project for our Slartitbartfast project.</p>

<ol>
  <li>Create a folder to house your Trac projects, say <strong>C:\Trac</strong></li>
  <li>Open a command window and change directory to your Trac projects folder.</li>
  <li>Create a folder for your new project: <strong>mkdir Slartibartfast</strong></li>
  <li>Change to that folder: <strong>cd Slartibartfast</strong>.</li>
  <li>Start the Trac administration application to start an interactive setup session: <strong>trac-admin . initenv</strong></li>
</ol>


<p>  You need to fill out some values as it asks for them. Here's a sample interactive session that I did as a test run:</p>

<pre><code>C:\Trac\Slartibartfast&gt;trac-admin . initenv
Creating a new Trac environment at C:\Trac\Slartibartfast

Trac will first ask a few questions about your environment
in order to initialize and prepare the project database.

 Please enter the name of your project.
 This name will be used in page titles and descriptions.

Project Name [My Project]&gt; Slartibartfast

 Please specify the connection string for the database to use.
 By default, a local SQLite database is created in the environment
 directory. It is also possible to use an already existing
 PostgreSQL database (check the Trac documentation for the exact
 connection string syntax).

Database connection string [sqlite:db/trac.db]&gt;

 Please specify the type of version control system,
 By default, it will be svn.

 If you don't want to use Trac with version control integration,
 choose the default here and don't specify a repository directory.
 in the next question.

Repository type [svn]&gt; hg

 Please specify the absolute path to the version control
 repository, or leave it blank to use Trac without a repository.
 You can also set the repository location later.

Path to repository [/path/to/repos]&gt; C:\Repos\Slartibartfast

Creating and Initializing Project
 Installing default wiki pages

**
** craploads of import statements go here **
**

---------------------------------------------------------------------
Warning: couldn't index the repository.

This can happen for a variety of reasons: wrong repository type,
no appropriate third party library for this repository type,
no actual repository at the specified repository path...

You can nevertheless start using your Trac environment, but
you'll need to check again your trac.ini file and the [trac]
repository_type and repository_path settings in order to enable
the Trac repository browser.


---------------------------------------------------------------------
Project environment for 'Slartibartfast' created.

You may now configure the environment by editing the file:

  C:\TracProjects\Slartibartfast\conf\trac.ini

If you'd like to take this new project environment for a test drive,
try running the Trac standalone web server `tracd`:

  tracd --port 8000 C:\TracProjects\Slartibartfast

Then point your browser to http://localhost:8000/Slartibartfast.
There you can also browse the documentation for your installed
version of Trac, including information on further setup (such as
deploying Trac to a real web server).

The latest documentation can also always be found on the project
website:

  http://trac.edgewall.org/

Congratulations!
</code></pre>

<p>You may notice the message: <em>Warning: couldn't index the repository.</em>
Don't be too concerned at this point, as we need to do a bit more to make sure that the Mercurial stuff is working.</p>

<p>Now we should test to make sure we're able to start the Trac daemon and see if the project site has been set up. We do that by executing the statement they suggested in the output:
<strong>tracd --port 8000 C:\TracProjects\Slartibartfast</strong>
Then we browse to <a href="http://localhost:8000">http://localhost:8000</a> to see if it works! If all goes well you should see a project listing. Click on Slartibartfast and you should see something like this:</p>

<p><a href="http://buffered.io/uploads/2009/05/trac_1.png"><img src="http://buffered.io/uploads/2009/05/trac_1.png" alt="Trac Project Page - with error." title="Trac Project Page - with error." width="640" height="347" /></a></p>

<p>Trac is telling us why it's not able to index the repository, it's because we haven't enabled the plug-in yet. Let's do that now.</p>

<p>Open up the <em>Trac.ini</em> file which is located inside the <em>conf</em> folder under the main project folder (eg <em>C:\Trac\Slartibartfast\conf\Trac.ini</em>).</p>

<p>First, add the following section to the ini file:</p>

<pre><code>[hg]
# -- Show revision number in addition to the changeset hash
show_rev = yes

# -- Changeset hash format
node_format = short
# hex:   Show the full SHA1 hash 
# short: Show a shortened hash for the changesets
</code></pre>

<p>Then enable the Mercurial plugin by adding the following:</p>

<pre><code>[components]
tracext.hg.backend.csetpropertyrenderer = enabled
tracext.hg.backend.hgdefaultpropertyrenderer = enabled
tracext.hg.backend.hgextpropertyrenderer = enabled
tracext.hg.backend.mercurialconnector = enabled
</code></pre>

<p><em>Note:</em>Make sure that the <kbd>[hg]</kbd> and <kbd>[components]</kbd> sections don't already exist. If they do, then add the respective lines to the existing sections rather than creating new ones. For a fresh install, these sections shouldn't already exist, so you should be safe to add them.</p>

<p>Kill the tracd instance by press CTRL+C, then restart it (press the up arrow, then enter). Refresh your browser window and this time you should see this:</p>

<p><a href="http://buffered.io/uploads/2009/05/trac_2.png"><img src="http://buffered.io/uploads/2009/05/trac_2.png" alt="Trac Project Page - without error." title="Trac Project Page - without error." width="640" height="372" /></a></p>

<p>Excellent, our project is up and our repository is able to be read. We're done!</p>

<h3>Server: Setting up the Trac Daemon as a Service</h3>


<p>The tracd needs to run as a service. This is to make sure it's always running in a way that IIS can reference it. Given that we're later going to be hooking this up to IIS, we need to make sure it uses the <a href="http://tomcat.apache.org/connectors-doc/ajp/ajpv13a.html" title="AJP Reference">AJP</a> protocol. Here are the required steps:</p>

<ol>
  <li>Install the Windows 2003 resource kit.</li>
  <li>Open a command window, and navigate to where the resource kit binaries are installed. On my system that was at <em>C:\Program Files\Windows Resource Kits\Tools</em></li>
  <li>Create a service called "Trac" by executing the following command: <strong>InstSrv Trac "C:\Program Files\Windows Resource Kits\Tools\SrvAny.exe"</strong> - (note the use of the full path is necessary for this to work).</li>
  <li>Next we need to hack the registry a little to pass the right parameters and have the tracd started.
<ol>
  <li>Open regedit.</li>
  <li>Go to <strong>HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\Trac</strong></li>
  <li>Create a new sub-key called <strong>Parameters</strong></li>
  <li>Inside this new sub-key, create two new values:
  </li>
<ol>
  <li><strong>Application</strong> of type String. Set the value to the full path of <em>python.exe</em>. Eg <strong>C:\python25\python.exe</strong></li>
  <li><strong>AppParameters</strong> of type String. Set the value to <strong>C:\python25\Scripts\tracd-script.py --port 8009 C:\Trac\Slartibartfast</strong> - (note the change of port number, it's there for a reason we'll cover shortly).</li>
</ol>
</ol>
<li>Open the services tool from the Control Panel, find the <strong>Trac</strong> service and start it up! Navigate to <a href="http://localhost:8009">http://localhost:8009</a> to make sure it still works.</li>
</ol>


<p>If you get the same site as you did before, then all is going well. If not, then you revisit the steps to make sure you haven't missed anything out and that your pointing to the right location of the trac project.</p>

<p>Now that we know this works, we need to change the <strong>AppParameters</strong> value in the registry so that Trac fires up using the appropriate protocol. Edit the value, and append the following to the end of the existing value: <strong>--protocol=ajp</strong> - this forces the use of AJP. AJP's default port is 8009, which is why we chose this value in the first place.</p>

<p>Restart the Trac service. If you attempt to browse to the site now you won't get anything meaningful, but it's ready to be talked to from IIS, which brings us to the next step.</p>

<h3>Server: Setting up Apache Tomcat ISS ISAPI Filter in IIS 6.</h3>


<p>To get IIS to talk to Trac, we need to add an ISAPI filter that's able to translate to the AJP protocol. This is what we'll be doing in this section.</p>

<p>First, we prepare the filter for use:</p>

<ol>
  <li>Create a folder to store the ISAPI file. I called mine <strong>C:\AJPConnector</strong>.</li>
  <li>Copy the Apache Tomcat AJP ISAPI filter (isapi_redirect-1.2.28.dll) into the folder you created in the previous step, and rename it to <strong>isapi_redirect.dll</strong>.</li>
  <li>Create a new text file in the same folder called <strong>isapi_redirect.properties</strong>. Open the file with a text editor and add the following content:

    # Configuration file for the ISAPI Redirector

    # The path to the ISAPI Redirector Extension, relative to the website
    # This must be in a virtual directory with execute privileges
    extension_uri=/AJPConnector/isapi_redirect.dll

    # Full path to the log file for the ISAPI Redirector
    log_file=C:\AJPConnector\isapi_redirect.log

    # Log level (debug, info, warn, error or trace)
    log_level=info

    # Full path to the workers.properties file
    worker_file=C:\AJPConnector\workers.properties

    # Full path to the uriworkermap.properties file
    worker_mount_file=C:\AJPConnector\uriworkermap.properties

</li>
<li>Create another new text file in the same folder called <strong>workers.properties</strong>. Open it, and add this content:

    # Define 1 real worker
    worker.list=trac
    # Set properties for trac (ajp13)
    worker.trac.type=ajp13
    worker.trac.host=localhost
    worker.trac.port=8009
    worker.trac.socket_keepalive=0

</li>
<li>Create <em>another</em> new text file in the same folder called <strong>uriworkermap.properties</strong>. Open it and add the following:

    /Slartibartfast*=trac

You'll notice that the project name is what I've used here. Down the track if you want more projects, you need to add more lines to this file.</li>
</ol>


<p>Next we need to install the ISAPI filter in IIS so that it can get used. Feel free to do this on the default website if you like. I created another website in IIS running on a different port, but you don't have to. Any time I refer to <em>the website</em> I'm referring to the site you have decided to install the filter on.</p>

<p>We need to enable the filter as a web service extension first. To do that, we follow these steps:</p>

<ol>
  <li>Open up the IIS manager.</li>
  <li>Right-click on "Web Service Extensions" and select "Add a new web service extension".</li>
  <li>In the resulting dialog box, click the "Add..." button and specify the file <strong>C:\AJPConnector\isapi_redirect.dll</strong>. Click "OK".</li>
  <li>Specify the name "AJPConnector" and click "OK".</li>
</ol>


<p>Next we need to add the filter to the website.</p>

<ol>
  <li>In IIS manager right-click on the website and view the properties.</li>
  <li>Select the "ISAPI Filters" tab.</li>
  <li>Click "Add".</li>
  <li>Give the filter the name "AJPConnector".</li>
  <li>Specify the full path to the dll: <strong>C:\AJPConnector\isapi_redirect.dll</strong>.</li>
  <li>Click "OK".</li>
  <li>Click on the "Home Directory" tab.</li>
  <li>Make sure the "Execute Permissions" is set to "Scripts and Executables".</li>
  <li>Make a note of the application pool that the web site is running under! You'll need this in a minute.
  <li>Click "OK" to close the dialog.</li>
</ol>


<p>For the ISAPI filter to function, we need to make sure that IIS has access to the folder which the binary is stored in. To do this we need to know which account the website is running under.</p>

<ol>
  <li>In IIS manager open the list of Application Pools.</li>
  <li>Choose the application pool that your website is running under. Rick-click and select properties.</li>
  <li>Click on the "Identity" tab. This will show you the name of the account that your site is running under.</li>
  <li>Browse to <strong>C:\AJPConnector</strong>, right-click and select "Properties", then choose the "Security" tab.</li>
  <li>Click "Add" and type in the name of the account that you found listed in the "Identity" tab in the application pool properties. You can also use the search feature if you want to.</li>
  <li>When the user has been recognised, click "OK".</li>
  <li>Select the user in the list at the top of the dialog, and make sure that they have "Full Control" selected in the list at the bottom.</li>
  <li>Click on the "Advanced" button.</li>
  <li>Select the check box that says "Replace permission entries on all child objects with entries shown here that apply to child objects". Then press "OK". This will apply the permissions to all child objects in the folder.</li>
  <li>Click "OK" to close the dialog box.</li>
</ol>


<p>You may have noticed that in the <strong>isapi_redirect.properties</strong> file we specified an <em>extension_uri</em> property. This property specifies the path to use to get to the <strong>isapi_redirect.dll</strong> file via IIS. Notice how it's also a relative path from the root folder. Hence we need to create a virtual directory which maps to the same path.</p>

<ol>
  <li>In IIS manager right-click on the website and select "New" then "Virtual Directory...".</li>
  <li>Fill out the wizard making sure you use the name "AJPConnector" for the directory name, and point it at <strong>C:\AJPConnector</strong>. The site also needs to be able to execute programs, not just scripts.</li>
</ol>


<p>Restart IIS. The quickest way to do this is to type <strong>iisreset</strong> into a command prompt or into the "Run" dialog.</p>

<p>It's best at this point to make sure that the ISAPI filter has been loaded. To do this, simply open up the IIS manager again and browser to the sites "ISAPI Filters" tab. If all is working, then you should see something like this:</p>

<p><img src="http://buffered.io/uploads/2009/05/iis_isapi.png" alt="Working IIS ISAPI Filter" title="Working IIS ISAPI Filter" /></p>

<p>Notice the green arrow. If it's red and pointing downwards, then something is wrong. You need to make sure you have followed the above steps correctly. Double-check the security of the folders and make sure executables are enabled on your site.</p>

<p>If all is well then we can test it! Make sure your Trac service is running, then open a browser and navigate to your local IIS website. You should see the Trac Project website for Slartibartfast appear in your browswer. Yay!</p>

<p>It's now very easy to change IIS to function over HTTPS instead of HTTP. That's beyond the scope of this article as there are hundreds of blog entries and how-tos out there already.</p>

<h3>Server: Setting up CopSSH</h3>


<p>This is the final step! We need to give people access to the Mercurial repositories over SSH. For that we need to set up a functional SSH server and give them access to the repository path. On the surface these both seem like easy jobs. Unfortunately setting up SSH servers on Windows isn't pleasant and pointing everyone's home folders at a certain repository is not something that comes out of the box in Windows.</p>

<p>What we need to do is use the CopSSH installer to help with the "easy" installation of SSH. Then we need to use a program like Junction to provdie symbolic-link style functionality to the user's folders.</p>

<p>First up, run the CopSSH installer program. Follow all of the prompts and feel free to use the default installation. That was easy wasn't it! It should install an SSH server service for you. I found it quite hard to locate in the Service Management dialog, but eventually found it under the name "Openssh SSHD".</p>

<p>CopSSH comes with utilities which help you manage users. Those utilities are all in the programs menu and are easy to use. For me, those utilities weren't enough, because I knew that I was going to have to make sure that the folder links were set up on creation of user accounts and removed when those accounts were deleted.</p>

<p>It's a good move at this point to download Junction, if you haven't already, and put it in an easy to reach location. Feel free to add it to it's own folder or to system32. It's up to you. I'll assume you've put it in <strong>C:\tools</strong>.</p>

<p>I then created two scripts. The first lets you add users. It looks like this:</p>

<pre><code>REM AddUser.bat
"C:\Program Files\ICW\Bin\copsshadm.exe" --command activateuser --user %1 --shell /bin/bash --passphrase %2
C:\tools\junction.exe "C:\Program Files\ICW\home\%1\Slartibartfast" C:\Repos\Slartibartfast
</code></pre>

<p>The first line of this file executes the user activation feature of CopSSH. It creates a new user from a local security login (so the users need to be accessible in Active Directory or in the local security set up). It creates a home folder for them and also creates a public/private key pair which it stores in their home folder as well. The keys have the passphrase that is passed to the script on the command line and will be used by the users to SSH in and commit changes to the repository. The public key for the user is added to the server as a recognised key which can be used to log in so we don't have to specify it manually.</p>

<p>The second line of the script executes the Junction program and links a folder called "Slartibartfast", located in the user's home folder, to the folder where the repository is stored.</p>

<p>To execute the script simply run: <strong>adduser.bat [username] [passphrase]</strong>.
Please note that during my testing, I wasn't able to use a passphrase that had spaces. This isn't due to a bug in the script. Even if you replace <em>--passphrase %2</em> with <em>--passphrase "%2"</em> it still doesn't work. It also doesn't work in the user interface tools. This appears to be a bug in CopSSH. This isn't a big issue though, just make sure you don't have spaces in your passphrase and you should be fine.</p>

<p>The second script is for removing users, it looks like this:</p>

<pre><code>REM RemUser.bat
C:\tools\junction.exe -d "C:\Program Files\ICW\home\%1\Slartibartfast"
"C:\Program Files\ICW\Bin\copsshadm.exe" --command deactivateuser --user %1
</code></pre>

<p>It's obvious what this does. First it removes the symbolic link in the user's folder, then it uses CopSSH's command line tools to remove them as a valid user from the SSH server.</p>

<p>Before you assume that everything at this point is ready to rock, you may need to make sure that your firewall is updated so that the SSH port, 22, is open.</p>

<p>Congratulations, you are now finished with the server set up. Now let's get the clients working. Before you go to the next step, make sure you add a user!</p>

<h3>Client: Setting up PuTTy</h3>


<p>The first bit is easy, make sure that you've installed the PuTTy program and added the install path to the system's PATH environment variable.</p>

<p>Take a copy of the user's private key. This is generated by CopSSH and should be sitting in the user's home folder on the server. The key is usually called <strong>[username].key</strong>. Put the key on your local machine. We need to convert this key into a format that PuTTy can use.</p>

<ol>
  <li>Fire up the puttygen.exe utility. It comes with the PuTTy program. Simply type "puttygen" into the Run dialog box and it should come up if you've added the install folder to the system PATH.</li>
  <li>Click "Load" and select the private key file you copied from the server.</li>
  <li>Enter the user's passphrase into the dialog that appears and press "OK".</li>
  <li>You should get a message stating ...
  

    Successfully imported foreign key
    (OpenSSH SSH-2 private key).
    To use this key with PuTTY, you need to
    use the "Save private key" command to
    save it in PuTTY's own format.

Just press "OK".</li>
<li>Click "Save private key" and save the key in a safe location on your machine.</li>
</ol>


<p>Your key can now be used by PuTTy.</p>

<p>When using SSH, you are going to have to have to specify the passphrase each time you connect to the server. This can get annoying quickly especially if you do a lot of commits. Instead of typing this in manually every time, I prefer to use the pageant.exe utility that also comes with PuTTy. This takes charge of handling the key passphrase for you.</p>

<ol>
  <li>From the command line or Run dialog, type <strong>pageant</strong>. You see a rather bland dialog appear.</li>
  <li>Click "Add key". Browse to the folder where you have stored your new .ppk (the PuTTy version of your key) and select the key.</li>
  <li>When prompted, specify the passphrase and click "OK".</li>
  <li>You should now see an item appear in the list box. This is your private key. Pageant is now in memory and handling that key.</li>
  <li>Close pageant, but you should still see it running in the system tray.</li>
</ol>


<p>I also find it helpful to add <em>pageant.exe</em> to my start-up folder so that it is always running when I log in to my machine. You may choose to do the same.</p>

<h3>Client: Setting up Mercurial</h3>


<p>If you haven't already, make sure you install Mercurial on the client machine using the default settings. Make sure you tell the installer to add the Mercurial path to the system PATH.</p>

<p>The last step of configuration for the client is to tell Mercurial to use the PuTTy tools when using SSH. Mercurial can be configured by a user-specific configuration file called <em>.hgrc</em>. On Windows it can also be called <em>Mercurial.ini</em>. The file is located in your home folder. If you don't know what your home folder is, simply open a command prompt and type <strong>echo %USERPROFILE%</strong> - this will tell you the path.</p>

<p>If you haven't set up your configuration yet, then chances are the configuration file doesn't exist. So you'll have to create it. Create a file call either <em>.hgrc</em> or <em>Mercurial.ini</em> in your home folder manually, and open it in a text editor. Here is what part of mine looks like:</p>

<pre><code>[ui]
username = OJ Reeves &lt;put your email here in the angle brackets&gt;
editor = vim
ssh = plink -ssh -i "C:/path/to/key/id_rsa.ppk" -C -agent
</code></pre>

<p>The last line is the key and this is what you need to make sure it set properly. We are telling Mercurial to use the <em>plink</em> program. This also comes with PuTTy and is a command-line version of what the PuTTY program itself does behind the scenes. We also add a few parameters:</p>

<ul>
  <li><em>-ssh</em> : Indicates that we're using the SSH protocol.</li>
  <li><em>-i "file.ppk"</em> : Specifies the location of the private key file we want to use to log in to the remote server. Change this to point to your local putty-compatible ppk private key. Make sure you user forward-slashes for the path separators as well!</li>
  <li><em>-C</em> : This switch enables compression.</li>
  <li><em>-agent</em> : This tells <em>plink</em> to talk to the <em>pageant</em> utility to get the passphrase for the key instead of asking you for it interactively.</li>
</ul>


<p>The client is now ready to rock!</p>

<h3>Finale</h3>


<p>It took a while, but we got there in the end. Let's give our new-found Mercurial SSH server a spin. This should be easy as opening a command prompt at the appropriate location on disk and typing:</p>

<p><strong>hg clone ssh://url.to.your.server.com/Slartibartfast</strong></p>

<p>If everything has been configured properly, you should see Mercurial create a local folder called <strong>Slartibartfast</strong> which contains the repository. Of course, there won't be much in it because you've only created it recently! But you should be able to start using Mercurial to commit changes and push the committed changesets to the server just by running <strong>hg push</strong>.</p>

<h3>The End</h3>


<p>It took a while to figure most of this stuff out despite the documentation that exists on the web. It also took a bit of time to write this up! I hope that someone out there finds it useful.</p>

<p>The funny thing about all this, is that despite the pain, I found it easier to set up than TFS!</p>

<p>Feedback is always wanted and welcome. I hope it helps :)</p>

<hr />


<p><strong>Edit 11/06/2009 :</strong> I've been using this set up for a little while and I'm now aware of an issue that I'm not currently able to get around (moreso because I can't be bothered trying to!). The issue is that you have <em>any</em> files added to the Trac system which have file names containing characters which change when URL encoded (such as spaces, which become %20 for example) the you won't be able to view them through the web interface. That goes for files attached to wiki pages, and sources files viewed in the source browser. If you have a file called "My Doc.doc" behind the scenes this setup results calls being made with the file name "My%20Doc.doc", which doesn't exist! Just be warned. If you're going to use this setup, don't add files to your source or to the wiki that contain spaces or odd characters. :)</p>

<hr />


<p><strong>Edit 26/06/2009 :</strong>
Have a look at <a href="http://buffered.io/posts/setting-up-trac-mercurial-and-ssh-on-windows/#comment-20599851" title="Jeremy's comment">Jeremy's comment</a> for a resolution to this escaping problem. Thanks for that mate!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Resolving Side-by-Side Configuration Issues]]></title>
    <link href="http://buffered.io/posts/resolving-side-by-side-configuration-issues/"/>
    <updated>2008-05-17T20:33:00+10:00</updated>
    <id>http://buffered.io/posts/resolving-side-by-side-configuration-issues</id>
    <content type="html"><![CDATA[<p>I've been meaning to blog about this for well over a year now, but for some reason I never got round to it. This came up in conversation the other day with a couple of workmates and it prompted me to revisit the issue.</p>

<p>Have you ever fired up an application on Windows XP and got the following error?</p>

<blockquote><p>The application has failed to start because the application configuration is incorrect. Reinstalling the application may fix this problem.</p></blockquote>


<p>Informative isn't it! What about if you fire up the same application on Windows Vista?</p>

<blockquote><p>The application has failed to start because its side-by-side configuration is incorrect. Please see the application event log for more detail.</p></blockquote>


<p>This does tell us a little bit more about the problem, but not a <em>lot</em> more.</p>

<!--more-->


<p>The fact is that the first error message above is useless, and the second is useless to everyone except those who know all about <a href="http://blog.tiensivu.com/aaron/archives/1306-Demystifying-the-WinSxS-directory-in-Windows-XP,-Vista-and-Server-20032008.html" title="WinSxS">WinSxS</a> (<em>side-by-side</em>). I'm not going to go into detail about WinSxS in this article, but the short description is: <em>it's an attempt at alleviating <a href="http://en.wikipedia.org/wiki/DLL_hell" title="DLL Hell">DLL hell</a></em>.</p>

<p>When a binary component links against a DLL, such as <a href="http://www.microsoft.com/" title="Microsoft">MS</a>'s <a href="http://msdn.microsoft.com/en-us/library/abx4dbyh(VS.80).aspx" title="C Run-Time Libraries">CRT</a>, an entry for that dependant DLL is specified in the component's <a href="http://msdn.microsoft.com/en-us/library/aa375365.aspx" title="Manifests">manifest</a>. This tells Windows that the application can't run without those DLLs being present. If they're not present in WinSxS then the errors above are thrown in the user's face.</p>

<p>To demonstrate the problem, consider the C++ program below.
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">include</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="n">windows</span><span class="p">.</span><span class="n">h</span><span class="o">&gt;&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">include</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="n">tchar</span><span class="p">.</span><span class="n">h</span><span class="o">&gt;&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="kt">int</span> <span class="n">WINAPI</span> <span class="n">_tWinMain</span><span class="p">(</span><span class="n">HINSTANCE</span> <span class="n">instance</span><span class="p">,</span> <span class="n">HINSTANCE</span> <span class="n">prevInstance</span><span class="p">,</span> <span class="n">LPTSTR</span> <span class="n">cmdLine</span><span class="p">,</span> <span class="kt">int</span> <span class="n">cmdShow</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="o">::</span><span class="n">MessageBox</span><span class="p">(</span><span class="nb">NULL</span><span class="p">,</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span>  <span class="n">_T</span><span class="p">(</span><span class="s">&quot;This is a text executable that links against a later version of the runtimes.&quot;</span><span class="p">),</span>
</span><span class='line'>  <span class="n">_T</span><span class="p">(</span><span class="s">&quot;Test EXE&quot;</span><span class="p">),</span>
</span><span class='line'>  <span class="n">MB_OK</span><span class="p">);</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>  <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Compile this on a machine with <a href="http://msdn.microsoft.com/en-us/vstudio/default.aspx" title="Visual Studio Developer Center">Vis Studio 2008</a> installed and the resulting EXE will be linked against version 9.0 of the CRT.</p>

<p>Here is the result of running this on an XP machine without that runtime installed:</p>

<p><a href="http://buffered.io/uploads/2008/05/xp_fail.png" rel="lightbox[winsxs]"><img src="http://buffered.io/uploads/2008/05/xp_fail.png" alt="Windows XP Error" title="XP Error" width="300" height="56" class="aligncenter size-medium wp-image-350" /></a></p>

<p>Here's the same application running on Vista, again without the runtime installed:
<a href="http://buffered.io/uploads/2008/05/vista_fail.png" rel="lightbox[winsxs]"><img src="http://buffered.io/uploads/2008/05/vista_fail.png" alt="WinSxS error on Vista" title="Vista Error Message" width="300" height="95" class="aligncenter size-medium wp-image-349" /></a></p>

<p>Let's now pretend that we don't know why this problem is occuring and attempt to ascertain the reason for the error.</p>

<p>First off, we need to locate the application's manifest. This can be found either in a appname.exe.manifest file, or <em>inside</em> the binary itself. In our case, the manifest is embedded so we need to open up the file in a binary/hex editor (or at least an editor that allows you to view the content of binary files). I used <a href="http://www.vim.org/" title="VIM">VIM</a>, but there are other options such as <a href="http://www.ultraedit.com/" title="UltraEdit">UltraEdit</a> and the free <a href="http://www.softcircuits.com/cygnus/fe/" title="Cygnus Hex Editor">Cynus</a> editor.</p>

<p>Manifest information is usually stored towards the end of the file, so after opening it in your editor of choice, scroll to the end of the file and slowly scroll up. When you reach a section that contains what looks to be <a href="http://www.w3.org/XML/" title="XML">XML</a> then you've probably found it. It usually lies just above a section of padding that looks like this:</p>

<pre><code>0001ab0: 5041 4444 494e 4758 5850 4144 4449 4e47  PADDINGXXPADDING
0001ac0: 5041 4444 494e 4758 5850 4144 4449 4e47  PADDINGXXPADDING
0001ad0: 5041 4444 494e 4758 5850 4144 4449 4e47  PADDINGXXPADDING
0001ae0: 5041 4444 494e 4758 5850 4144 4449 4e47  PADDINGXXPADDING
0001af0: 5041 4444 494e 4758 5850 4144 4449 4e47  PADDINGXXPADDING
0001b00: 5041 4444 494e 4758 5850 4144 4449 4e47  PADDINGXXPADDING
0001b10: 5041 4444 494e 4758 5850 4144 4449 4e47  PADDINGXXPADDING
0001b20: 5041 4444 494e 4758 5850 4144 4449 4e47  PADDINGXXPADDING
0001b30: 5041 4444 494e 4758 5850 4144 4449 4e47  PADDINGXXPADDING
0001b40: 5041 4444 494e 4758 5850 4144 4449 4e47  PADDINGXXPADDING
0001b50: 5041 4444 494e 4758 5850 4144 4449 4e47  PADDINGXXPADDING
0001b60: 5041 4444 494e 4758 5850 4144 4449 4e47  PADDINGXXPADDING
0001b70: 5041 4444 494e 4758 5850 4144 4449 4e47  PADDINGXXPADDING
</code></pre>

<p>The manifest XML usually begins with an <em>assembly</em> tag. In the case of this example, it looks like this:</p>

<pre><code>0001850: e404 0000 0000 0000 3c61 7373 656d 626c  ........&lt;assembl
0001860: 7920 786d 6c6e 733d 2275 726e 3a73 6368  y xmlns="urn:sch
0001870: 656d 6173 2d6d 6963 726f 736f 6674 2d63  emas-microsoft-c
0001880: 6f6d 3a61 736d 2e76 3122 206d 616e 6966  om:asm.v1" manif
0001890: 6573 7456 6572 7369 6f6e 3d22 312e 3022  estVersion="1.0"
00018a0: 3e0d 0a20 203c 7472 7573 7449 6e66 6f20  &gt;..  &lt;trustInfo
00018b0: 786d 6c6e 733d 2275 726e 3a73 6368 656d  xmlns="urn:schem
00018c0: 6173 2d6d 6963 726f 736f 6674 2d63 6f6d  as-microsoft-com
00018d0: 3a61 736d 2e76 3322 3e0d 0a20 2020 203c  :asm.v3"&gt;..    &lt;
00018e0: 7365 6375 7269 7479 3e0d 0a20 2020 2020  security&gt;..
00018f0: 203c 7265 7175 6573 7465 6450 7269 7669   &lt;requestedPrivi
0001900: 6c65 6765 733e 0d0a 2020 2020 2020 2020  leges&gt;..
0001910: 3c72 6571 7565 7374 6564 4578 6563 7574  &lt;requestedExecut
0001920: 696f 6e4c 6576 656c 206c 6576 656c 3d22  ionLevel level="
0001930: 6173 496e 766f 6b65 7222 2075 6941 6363  asInvoker" uiAcc
0001940: 6573 733d 2266 616c 7365 223e 3c2f 7265  ess="false"&gt;&lt;/re
0001950: 7175 6573 7465 6445 7865 6375 7469 6f6e  questedExecution
0001960: 4c65 7665 6c3e 0d0a 2020 2020 2020 3c2f  Level&gt;..      &lt;/
0001970: 7265 7175 6573 7465 6450 7269 7669 6c65  requestedPrivile
0001980: 6765 733e 0d0a 2020 2020 3c2f 7365 6375  ges&gt;..    &lt;/secu
0001990: 7269 7479 3e0d 0a20 203c 2f74 7275 7374  rity&gt;..  &lt;/trust
00019a0: 496e 666f 3e0d 0a20 203c 6465 7065 6e64  Info&gt;..  &lt;depend
00019b0: 656e 6379 3e0d 0a20 2020 203c 6465 7065  ency&gt;..    &lt;depe
00019c0: 6e64 656e 7441 7373 656d 626c 793e 0d0a  ndentAssembly&gt;..
00019d0: 2020 2020 2020 3c61 7373 656d 626c 7949        &lt;assemblyI
00019e0: 6465 6e74 6974 7920 7479 7065 3d22 7769  dentity type="wi
00019f0: 6e33 3222 206e 616d 653d 224d 6963 726f  n32" name="Micro
0001a00: 736f 6674 2e56 4339 302e 4352 5422 2076  soft.VC90.CRT" v
0001a10: 6572 7369 6f6e 3d22 392e 302e 3231 3032  ersion="9.0.2102
0001a20: 322e 3822 2070 726f 6365 7373 6f72 4172  2.8" processorAr
0001a30: 6368 6974 6563 7475 7265 3d22 7838 3622  chitecture="x86"
0001a40: 2070 7562 6c69 634b 6579 546f 6b65 6e3d   publicKeyToken=
0001a50: 2231 6663 3862 3362 3961 3165 3138 6533  "1fc8b3b9a1e18e3
0001a60: 6222 3e3c 2f61 7373 656d 626c 7949 6465  b"&gt;&lt;/assemblyIde
0001a70: 6e74 6974 793e 0d0a 2020 2020 3c2f 6465  ntity&gt;..    &lt;/de
0001a80: 7065 6e64 656e 7441 7373 656d 626c 793e  pendentAssembly&gt;
0001a90: 0d0a 2020 3c2f 6465 7065 6e64 656e 6379  ..  &lt;/dependency
0001aa0: 3e0d 0a3c 2f61 7373 656d 626c 793e 5041  &gt;..&lt;/assembly&gt;PA
</code></pre>

<p>In case you don't find this very readable, here it is after extraction/formatting:
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;assembly</span> <span class="na">xmlns=</span><span class="s">&quot;urn:schemas-microsoft-com:asm.v1&quot;</span> <span class="na">manifestVersion=</span><span class="s">&quot;1.0&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="nt">&lt;trustInfo</span> <span class="na">xmlns=</span><span class="s">&quot;urn:schemas-microsoft-com:asm.v3&quot;</span><span class="nt">&gt;&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;pre&gt;&lt;code&gt;</span><span class="ni">&amp;lt;</span>security<span class="ni">&amp;gt;</span>
</span><span class='line'>  <span class="ni">&amp;lt;</span>requestedPrivileges<span class="ni">&amp;gt;</span>
</span><span class='line'>  <span class="ni">&amp;lt;</span>requestedExecutionLevel
</span><span class='line'>    level=&quot;asInvoker&quot;
</span><span class='line'>    uiAccess=&quot;false&quot;<span class="ni">&amp;gt;&amp;lt;</span>/requestedExecutionLevel<span class="ni">&amp;gt;</span>
</span><span class='line'>  <span class="ni">&amp;lt;</span>/requestedPrivileges<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="ni">&amp;lt;</span>/security<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="nt">&lt;/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;p&gt;</span>  <span class="nt">&lt;/trustInfo&gt;</span>
</span><span class='line'>  <span class="nt">&lt;dependency&gt;&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;pre&gt;&lt;code&gt;</span><span class="ni">&amp;lt;</span>dependentAssembly<span class="ni">&amp;gt;</span>
</span><span class='line'>  <span class="ni">&amp;lt;</span>assemblyIdentity
</span><span class='line'>    type=&quot;win32&quot;
</span><span class='line'>    name=&quot;Microsoft.VC90.CRT&quot;
</span><span class='line'>    version=&quot;9.0.21022.8&quot;
</span><span class='line'>    processorArchitecture=&quot;x86&quot;
</span><span class='line'>    publicKeyToken=&quot;1fc8b3b9a1e18e3b&quot;<span class="ni">&amp;gt;</span>
</span><span class='line'>  <span class="ni">&amp;lt;</span>/assemblyIdentity<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="ni">&amp;lt;</span>/dependentAssembly<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="nt">&lt;/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;p&gt;</span>  <span class="nt">&lt;/dependency&gt;</span>
</span><span class='line'><span class="nt">&lt;/assembly&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>The bit we're really interested in is:
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;dependentAssembly&gt;</span>
</span><span class='line'>  <span class="ni">&amp;lt;</span>assemblyIdentity<span class="nt">&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;pre&gt;&lt;code&gt;</span>type=&quot;win32&quot;
</span><span class='line'>name=&quot;Microsoft.VC90.CRT&quot;
</span><span class='line'>version=&quot;9.0.21022.8&quot;
</span><span class='line'>processorArchitecture=&quot;x86&quot;
</span><span class='line'>publicKeyToken=&quot;1fc8b3b9a1e18e3b&quot;<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="nt">&lt;/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;p&gt;</span>  <span class="nt">&lt;/assemblyIdentity&gt;</span>
</span><span class='line'><span class="nt">&lt;/dependentAssembly&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>This tells us the exact component and version required for this application to run. You'll notice that it also mentions the processor architecture. In this case, we need to make sure that we have version 9.0.21022.8 of the Visual C Runtimes for x86 installed in the side-by-side folder. The WinSxS folder can be found at <em>%WINDIR%\WinSxS</em></p>

<p>Inside that folder you'll probably see a stack of subfolders with crazy looking names. The one you would need to have to solve the problem above is called <em>x86_microsoft.vc90.crt_1fc8b3b9a1e18e3b_9.0.21022.8_none_bcb86ed6ac711f91</em>, which as you can see has a name that closely resembles the properties of the <em>assemblyIdentity</em> tag in the XML listed above.</p>

<p>If you can't find the appropriate folder in your WinSxS then you need to download an installer that contains the appropriate components and install it.When installed, the application should run without a problem, and you should get a message like this:
<a href="http://buffered.io/uploads/2008/05/vista_success.png" rel="lightbox[winsxs]"><img src="http://buffered.io/uploads/2008/05/vista_success.png" alt="The resulting message box shown when the test application\&#039;s side-by-side configuration is correct" title="Successful run of application" width="300" height="102" class="aligncenter size-medium wp-image-351" /></a></p>

<p>Hope that helps!</p>

<hr/>


<p><strong>Edit (3rd Jan '09)</strong>: A nifty tool has been built by Kenny Kerr which makes viewing manifest information <em>much</em> easier. Pointer your browser <a href="http://weblogs.asp.net/kennykerr/archive/posts/manifest-view-support-for-dlls.aspx">this way and check it out</a>. It should help when tryinig to resolve this problem.</p>

<!--adsense-->

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Reactivate? AGAIN!?]]></title>
    <link href="http://buffered.io/posts/reactivate-again/"/>
    <updated>2007-12-27T12:29:00+10:00</updated>
    <id>http://buffered.io/posts/reactivate-again</id>
    <content type="html"><![CDATA[<p>This is just a quick post to say how much Microsoft and their draconian OS licensing mechanism are pissing me off right now.</p>

<p>Last week my computer stopped booting. I didn't get around to looking at it until a few days ago because I had visitors over from the UK. Not just that, it is Christmas, and the last thing you want to be doing on your Christmas break is to be fixing computers.</p>

<!--more-->


<p>I spent an hour or two playing with bits and pieces to try and determine the error. The problem was that the third <a href="http://en.wikipedia.org/wiki/DIMM" title="DIMM">DIMM</a> slot on <a href="http://us.dfi.com.tw/Product/xx_product_spec_details_r_us.jsp?PRODUCT_ID=4556&CATEGORY_TYPE=LP%20UT&SITE=NA" title="DFI Lanparty CFX3200-DR">my motherboard</a> (which, incidentally, has been a bit of a nightmare since I bought it) is dodgey. I removed a 512MB RAM stick from the offending slot over to slot two and the machine started to come alive again. I was pretty happy about this, despite the reduction in RAM speed due to the configuration, since I didn't need to buy anything to make it work again!</p>

<p>So I left the machine for a couple of days again as I was happy with what I achieved. But today, because the study was in a bit of a state due to the bits of computers, manuals, and various other things I'd strewn around the room while investigating, I thought I'd finalise everything and tidy up.</p>

<p>Since my computer case was open, I thought I'd do a bit of housekeeping. I wasn't really happy with the way it was laid out inside so I thought I'd tidy that up a bit first. I removed <a href="http://www.linksys.com/servlet/Satellite?c=L_Product_C2&childpagename=US%2FLayout&cid=1150490054358&pagename=Linksys%2FCommon%2FVisitorWrapper" title="Linksys WMP54G">my WLAN card</a> because it was flaky at best in 64-bit, and I'd had enough of the lag spikes (time to go back to cabled LAN). I moved <a href="http://www.hisdigital.com/html/product_ov.php?id=217" title="HIS Radeon x1900xtx">my video card</a> to a different slot to create a bit more space between it and <a href="http://www.scythe-usa.com/product/cpu/006/scnj1000p.html" title="Ninja Scythe">my HSF</a> (which is awesome, and does a great job even if it is a behemoth!). I also adjusted the fans a bit, cleaned up a lot of the dust, and moved a few of the cables around to improve air-flow.</p>

<p>So with all that done, I fired up the machine.</p>

<p>.. and got nothing. <strong>Shit</strong>.</p>

<p>The investigation started again. I thought that I'd go right for the previous culprit and rip out the RAM stick that I'd moved to see if that would resolve the problem. Thankfully, it did. So right now I'm running on 1/2GB RAM, not ideal to say the least but the machine is booting which is a lot better than it not.</p>

<p>The machine booted, and up came windows. It was at this point that I remember it telling me that a few days back it wanted me to reactivate Windows because of a <em>substantial change in hardware</em>. Of course, I ignored this stupid box because at the time I hadn't changed <strong>anything</strong>. I'd <em>moved a RAM stick</em>!</p>

<p>But today, it greeted me again. This time the message was different. In essense, my 3-day "window" of reactivation had expired, and I was being forced to reactivate it now. And I do mean <strong>now</strong>. Now as in right now before I was allowed to log on. Oh, but there's a problem here you see, because prior to logging on, there's no network connection. So when you try and activate Windows before logging on, it can't activate over the Interweb because it can't get to it. Of course, the activation fails. But does it let me log in? No. What does it do? I ties itself into an infinite loop of ...<ol><li>Try to log in.</li><li>Fail because it's not activated.</li><li>Try to activate.</li><li>Fail to activate because it's not logged in and hence can't connect.</li><li>Goto step 1.</li></ol>Not happy. Not happy at all. Not only had I <strong>not</strong> changed any hardware in the system (all I'd done is move it around, and remove a WLAN card) to force the reactivation, I am now stuck with a machine that won't let me log in. Nice eh?</p>

<p>Here's a nice little side-note for the Linux fanboys :) (yes, you know who you are). For yonks, a slight modification in anything to do with the video hardware in my machine would result in my linux graphics setup shitting itself. I'd then have to spend a chunk of the day trying to get it to work again with my dual-screen setup. But not this time. I'd mucked around with everything inside the machine, and what happened when I booted Linux??</p>

<p>Wait for it... WAIT FOR IT!</p>

<p>Nothing. It booted as if nothing had changed. Video settings were the same. Dual-screen worked. I sat here a little stunned for a while and I was brought back from my daze by the little blinking icon in the system tray telling me that I had updates to download. The network had connected, and everything was sweet.</p>

<p>See that Microsoft? Right there. <strong>That</strong> is what <em>should</em> happen. Nothing more, nothing less. When I reboot after a hardware change, I expect you to continue as if nothing had happened. I expect the network to connect without me dicking with it. I expect a nice little "Hello OJ, you legend, how else can I make your life easy today?"</p>

<p>So hats off to you <a href="http://www.linuxmint.com/" title="LinuxMint">LinuxMint</a>. You made my day! Now, if only you hadn't borked my Firefox install :) Time to update you to the last version me thinks, and give you a bit of the love and attention that you deserve.</p>

<p>As a final note, it looks like I'm going to have to buy some new RAM, and while I'm there I'm going to ditch this UK keyboard as it has been driving me nuts for the last year and half. Time to get back to the Aussie (some might say US) layout.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Requisite Vista]]></title>
    <link href="http://buffered.io/posts/requisite-vista/"/>
    <updated>2007-10-29T06:43:00+10:00</updated>
    <id>http://buffered.io/posts/requisite-vista</id>
    <content type="html"><![CDATA[<p>When I started my new gig on the 15th of this month, I was handed a <a href="http://www.toshibadirect.com/td/b2c/cmod.to?coid=-33778" title="Toshiba Tecra M9">new laptop</a> to do all my work on. It's a nifty little gadget with 3GB RAM! Very schmick. There was one catch..</p>

<p>... see, the company is migrating to <a href="http://www.microsoft.com/windows/products/windowsvista/default.mspx" title="Windows Vista">Vista</a>, which means I have to use it too. A while ago I <a href="http://buffered.io/posts/should-i-install-vista/" title="Should I install Vista?">posted my thoughts with regards to installing Vista</a>, so as you can imagine it's a little bit strange having to use it.</p>

<!--more-->


<p>So after two weeks of using it, how have I found it? Well, for a beefy machine with this much RAM, I'd expect more. It doesn't feel any faster than my desktop, which is nearly 4 years old and runs <a href="http://www.microsoft.com/windowsxp/64bit/default.mspx" title="Windows XP Pro x64">Windows XP Pro x64</a>. It's a little disappointing in that regard. Rather than speak about things in general, here are the list of things that I <em>do</em> like about it...</p>

<p><a href="http://buffered.io/uploads/2007/10/vista_breadcrumbs.png" title="Explorer breadcrumbs in Vista" rel="lightbox[vista]"><img src="http://buffered.io/uploads/2007/10/vista_breadcrumbs.thumbnail.png" alt="Explorer breadcrumbs in Vista" class="InlineImageRight" /></a><strong>Windows explorer breadcrumbs</strong>. This feature is one that is sorely missed in Windows XP. Having the ability to leap to anywhere in the folder hierarchy at the click of a button is a real winner. I know you have similar functionality in XP, but you have to repeatedly click the "up folder" button, which is just crap. It might be not be something that I'll use a lot, but it's nice to have.</p>

<p><a href="http://buffered.io/uploads/2007/10/vista_aero.png" title="Aero in Vista" rel="lightbox[vista]"><img src="http://buffered.io/uploads/2007/10/vista_aero.thumbnail.png" alt="Aero in Vista" class="InlineImageRight" /></a><strong>The <em>look</em> of Aero</strong>. The new coat of paint is nice and is a bit of a breath of fresh air. That's about all I have to say.</p>

<p><a href="http://buffered.io/uploads/2007/10/vista_start_search.png" title="Vistas Start menu search" rel="lightbox[vista]"><img src="http://buffered.io/uploads/2007/10/vista_start_search.thumbnail.png" alt="Vistas Start menu search" class="InlineImageLeft"/></a><strong>The application search feature in the Start menu</strong>. This is something I use <em>all the time</em>. Shortcuts take to look to find with the mouse, and typing is SOOO much faster. Excellent feature. Shame it took so long to appear!</p>

<p><strong>Built-in "open command window here" function</strong>. To get this feature in Windows XP, you needed to install a <a href="http://www.microsoft.com/windowsxp/downloads/powertoys/xppowertoys.mspx" title="XP power toys">power toy</a>. Thankfully, to do this in Vista, all you need to do is hold down the SHIFT key when you right-click the mouse in Windows explorer. Easy peasy.</p>

<p>With the good things out of the way, here are the things that I find pretty darned awful...</p>

<p><strong>The <em>performance</em> of Aero</strong>. It's woeful. A machine with this amount of grunt shouldn't struggle to render the UI. The fact that it does makes me feel that there's way too much going on behind the scenes. I'd be willing to go back to XP so I can have a UI that's responsive.</p>

<p><a href="http://buffered.io/uploads/2007/10/vista_switcher.png" title="Vista/Aero application switcher" rel="lightbox[vista]"><img src="http://buffered.io/uploads/2007/10/vista_switcher.thumbnail.png" alt="Vista/Aero application switcher" class="InlineImageLeft" /></a><a href="http://buffered.io/uploads/2007/10/vista_alttab.png" title="ALT+TAB in Vista" rel="lightbox[vista]"><img src="http://buffered.io/uploads/2007/10/vista_alttab.thumbnail.png" alt="ALT+TAB in Vista" class="InlineImageRight" /></a><strong>The new Aero window switcher</strong> (accessible via Windows Key + TAB). Who uses it? ALT + TAB does the job, why bother with an overly resource-intensive, animated version that does the same thing but slower?</p>

<p><strong>Window previews</strong> of everything (sorry, no screenshot, because I turned it off). Every time you move the mouse you seem to get a window popping up with a mini-preview in it. It drove me nuts, so I had to kill it.</p>

<p><strong>Windows explorer performance</strong>. Is it just me, or does it take an ice-age for the file explorer to become responsive after you open it (that is, more than three seconds)? Displaying a list of files and whatnot on your machine should be lightening fast. It isn't on this machine.</p>

<p><strong>Network browsing performance</strong>. It <strong>sucks</strong>. Both at work and at home the speed of network browsing is just woeful. I know for sure that it's Vista playing silly-buggers, because on both of those networks the XP machines are lightening fast.</p>

<p><strong>UAC</strong>. I don't need to say any more about this, because it's been said a million times before by many other people.</p>

<p>There are other things that I do and don't like, but I don't consider them to be worth noting because they're the kind of things that you find in most operating systems :)</p>

<p>So have any of you been using Vista (either by choice or by force)? If so, how are you feeling about it?</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Microsoft Take Auto-Update Annoyances Another Step Further]]></title>
    <link href="http://buffered.io/posts/microsft-take-auto-update-annoyances-another-step-further/"/>
    <updated>2007-05-31T09:57:00+10:00</updated>
    <id>http://buffered.io/posts/microsft-take-auto-update-annoyances-another-step-further</id>
    <content type="html"><![CDATA[<p>Microsoft's Automatic Update feature has always been annoying. I don't care who you are, none of you can possibly say that it's not annoying :) I thought that it wasn't possible for it to become any <em>more</em> annoying than it already is, but today I was proved wrong.</p>

<p>My main gripe was that almost regardless of the update, the machine needs to be rebooted. You've updated my desktop picture? <em>Reboot required</em>. My IE install has had another check box added to the options? <em>Reboot required</em>. Notepad's default font has changed? <em>Reboot required</em>.</p>

<!--more-->


<p>Granted, some updates <em>do</em> need a reboot, and in those cases I'm ok with it. But <em>every damned time</em>??! For god's take take a leaf out of the Linux book and stop forcing me to reboot unless I <strong>add new hardware</strong>.  You're given the option by an interfering message box to "Reboot Now" or "Reboot Later". If you click "Reboot Later" becasue you're in the middle of something, you'll get that same damn message box appear again in 5 or so minutes time. My solution to this problem was to move this message box into the bottom right hand corner of the screen so that only a few pixels were visible.  Clicking on the system tray forced it to paint over the top, and hence I'd be free of all evidence of an annoying popup except for it's presence on the task bar.</p>

<p>So, that's how it <em>used</em> to work. <strong>Now</strong> it's even worse. Will everyone please give a big round of applause to the latest message box that greeted me after my last reboot after a batch of M$ patches...</p>

<p><img src="http://buffered.io/uploads/2007/05/autoupdate.png" alt="The Latest Automatic Update Reboot Notification" class="InlineImageCenter" /></p>

<p>Oh yeah, it's now <strong>time limited</strong>! What a nifty feature. M$ are now forcing you to reboot to make sure that your system is up to date, regardless of whether or not you want to. Now you <em>must</em> click one of those two buttons for the message to disappear. If you click "Restart Later", you're back in the cycle of clicking it every 5 minutes.</p>

<p>Why don't I just reboot? I'll tell you why . . . because I've already reboot. Because I'm in the middle of something. Because I have a train of thought that I don't want broken. Because I don't want to have to wait for 2 mins for my system to restart, then another 4 mins for all the updates to be fully applied, then have <em>another</em> reboot, then wait all over again, only to then wait for the GPO to kick in and make sure that all my settings are up to date.  We're talking a possible 10 minute turnaround for a supposedly innocent reboot. While I'm working, that's not the kind of time I want to have taken away. I want to click the "P*ss off and leave me alone" button. Alas, there isn't one.</p>

<p>This new feature comes with a few added benefits. To benefit from them, picture yourself in any of the following scenarios:</p>

<ul><li>You wander away from your desk at lunch, and leave some of your work open/unsaved.</li><li>You have an automated process running on another machine that you're leaving alone for a few hours because you know it takes a long period of time.</li><li>You have <em>any</em> kind of server with automatic updates turned on.</li><li>You're busy typing away, setting the keyboard on fire with the speed at which you type, and you see that message box appear and disappear <em>really quickly</em> . . . uh oh! . . . Which button did I 'choose'?</li></ul>


<p>M$, you really are a bunch of mindless muppets sometimes!</p>
]]></content>
  </entry>
  
</feed>
